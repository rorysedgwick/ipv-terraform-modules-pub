name: New module template PR

on:
  workflow_dispatch:
    inputs:
      module:
        description: "The module to publish a new version of"
        type: string
        required: true
      version:
        description: "The new version number to publish. Must be in the format x.y.z"
        type: string
        required: true

jobs:
  pull-request:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.SENIOR_SRE_TOKEN }}
          fetch-depth: 0

      - name: Print inputs
        run: |
          echo "Module to update: ${{ inputs.module }}"
          echo "Version to publish: ${{ inputs.version }}"

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install jq

      - name: Find current module version
        run: |
          CURRENT_VERSION=$(jq .${{ inputs.module }}.version manifest.json -r)
          echo "CURRENT_VERSION is $CURRENT_VERSION"
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Verify input version is not the same as current version
        run: |
          if [[ ${{ env.CURRENT_VERSION }} == ${{ inputs.version }} ]]; then echo "Input version is same as current version, exiting" && exit 1
          fi

      - name: Overwrite module version numbers
        run: |
          echo "Replacing module CURRENT_VERSION of ${{ env.CURRENT_VERSION }} with ${{ inputs.version }}"
          sed -i 's/${{ env.CURRENT_VERSION }}/${{ inputs.version }}/g' $GITHUB_WORKSPACE/${{ inputs.module }}/variables.tf
          cat $GITHUB_WORKSPACE/${{ inputs.module }}/variables.tf | grep 'version'

      - name: Update manifest module version number
        run: |
          jq '.${{ inputs.module }}.version |= "${{ inputs.version }}"' manifest.json > updated_manifest.json
          mv updated_manifest.json manifest.json

      - name: Print updated manifest
        run: |
          echo "Printing updated manifest version: "
          cat manifest.json
          UPDATED_VERSION=$(jq .${{ inputs.module }}.version manifest.json -r)
          echo "UPDATED_VERSION is $UPDATED_VERSION"

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.SENIOR_SRE_TOKEN }}
          commit-message: '[automated] Module ${{ inputs.module }} updated to version ${{ inputs.version }}'
          committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          # author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          branch: 'devplatform/module-update/${{ inputs.module }}/${{ inputs.version }}'
          delete-branch: true
          title: '[Bump] Module ${{ inputs.module }} updated to version ${{ inputs.version }}'
          body: |
            Updates module `${{ inputs.module }}` to latest version: **${{ inputs.version }}**.

            **Please review the latest changes to the [published CloudFrormation Template][https://github.com/govuk-one-login/devplatform-deploy/tree/main/${{ inputs.module }}/CHANGELOG.md] to see whether any module code changes are needed**.
            - If so, add them to this PR and test deployments before merging.
            - If not, this PR can be merged as is.

            PR auto-generated by [create-pull-request][2]

            [1]: https://github.com/govuk-one-login/devplatform-deploy
            [2]: https://github.com/peter-evans/create-pull-request
          labels: |
            module
            automated pr
          # team-reviewers: |
            # identity-sre
