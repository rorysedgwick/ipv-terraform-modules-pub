name: Publish module version
# triggered by a dev updating the terraform module
# almost exclusively because the underlying cloudformation template has updated
# and we want to match version with that, which may or may not require a functionality change
# so there is currently a version mismatch
# dev needs to determine whether code changes are needed in module

on:
  workflow_dispatch:
    inputs:
      module:
        description: 'The module to publish a new version of'
        type: string
        required: true
      version:
        description: 'The new version number to publish'
        type: string
        required: true
  # push:

jobs:
  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.SENIOR_SRE_TOKEN }}

      - name: Print inputs
        run: |
          echo " Module: ${{ inputs.module }}"
          echo " Version: ${{ inputs.version }}"

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install jq

      - name: Find current module version
        id: current_version
        run: |
          CURRENT_VERSION=$(jq .${{ inputs.module }}.version manifest.json -r)
          echo " CURRENT_VERSION is $CURRENT_VERSION"
          echo  "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Overwrite module version numbers
        run: |
          echo 'Overwriting module versions'
          echo " Using CURRENT_VERSION of ${{ env.CURRENT_VERSION }}"
          sed -i 's/${{ env.CURRENT_VERSION }}/${{ inputs.version }}/g' $GITHUB_WORKSPACE/${{ inputs.module }}/variables.tf

      - name: Update manifest module version number
        id: update_manifest
        run: |
          jq '.${{ inputs.module }}.version |= "${{ inputs.version }}"' manifest.json > updated_manifest.json
          mv updated_manifest.json manifest.json

      - name: Print manifest version number
        id: print_manifest
        run: |
          echo " Printing updated manifest version: "
          cat manifest.json
          UPDATED_VERSION=$(jq .${{ inputs.module }}.version manifest.json -r)
          echo " UPDATED_VERSION is $UPDATED_VERSION"

      # Using Senior Engineer's account here (not possible to alter GITHUB_TOKEN to include write permissions- project policy)
      - name: setup git config
        run: |
          git config user.name "Identity Pod Module Release"
          git config user.email "rory.sedgwick@digital.cabinet-office.gov.uk"

      - name: Create tag, commit & push
        run : |
          tag=${{ inputs.module }}/v${{ inputs.version }}
          git add manifest.json $GITHUB_WORKSPACE/${{ inputs.module }}/variables.tf
          git commit -m "Publishing: $tag" --no-verify
          git tag -a "$tag" -m "$tag"
          git tag
          git push --atomic origin main "$tag"
