name: Check S3 Template versions - scheduled
# triggered by a dev updating the terraform module
# almost exclusively because the underlying cloudformation template has updated
# and we want to match version with that, which may or may not require a functionality change
# so there is currently a version mismatch
# dev needs to determine whether code changes are needed in module

on:
  schedule:
    - cron: "* 04 * * *" # 4am every day
  workflow_dispatch:

jobs:
  list-modules:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      module_list: ${{ steps.list.outputs.module_list }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # token: ${{ secrets.SENIOR_SRE_TOKEN }}
          fetch-depth: 0

      - name: List modules
        id: list
        run: |
          MODULE_LIST=$(jq -c 'keys' manifest.json)
          echo "module_list is $MODULE_LIST"
          echo "module_list=$MODULE_LIST" >> "$GITHUB_OUTPUT"

  check-module-versions:
    runs-on: ubuntu-latest
    needs: list-modules
    timeout-minutes: 10
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        module: ${{ fromJson(needs.list-modules.outputs.module_list) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Print module
        run: |
          echo ${{ matrix.module }}

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.CFN_TEMPLATE_S3_BUCKET_ACCESS_GH_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Find current module version
        id: current_version
        run: |
          echo " Finding current version of ${{ matrix.module }}"
          CURRENT_VERSION=$(jq '."${{ matrix.module }}".version' manifest.json -r)
          echo " ${{ matrix.module }} CURRENT_VERSION is $CURRENT_VERSION"
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Query S3 for module
        run: |
          OBJECT_METADATA=$(aws s3api head-object --key ${{ matrix.module }}/template.yaml --bucket ${{ secrets.CFN_TEMPLATE_S3_BUCKET_NAME }})
          LATEST_TEMPLATE_VERSION=$(echo $OBJECT_METADATA | jq '.Metadata.version')
          echo " LATEST_TEMPLATE_VERSION is $LATEST_TEMPLATE_VERSION"
          echo "LATEST_TEMPLATE_VERSION=$LATEST_TEMPLATE_VERSION" >> $GITHUB_ENV

      - name: Check if latest template version differs from current version
        run: |
          if [[ ${{ env.CURRENT_VERSION }} != ${{ env.LATEST_TEMPLATE_VERSION }} ]]; then
            echo " Template version is not the same as current version"
            echo "CURRENT_VERSION_OUTDATED=TRUE" >> "$GITHUB_ENV"
          fi

      - name: Open PR
        if: env.CURRENT_VERSION_OUTDATED
        run: |
          echo "PR needs to be opened for ${{ matrix.module }}"
